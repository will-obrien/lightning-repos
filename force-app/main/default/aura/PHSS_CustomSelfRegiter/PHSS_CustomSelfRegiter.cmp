<aura:component controller="LightningSelfRegisterController" implements="forceCommunity:availableForAllPageTypes"  access="global" >
    <aura:attribute name="accountId" type="String" required="false" description="accountId for creating the user. If not specified, it will create a PersonAccount if possible for B2C scenario. Or otherwise if it's in a community, the community's self-registration accountId will be used."/>
    <aura:attribute name="regConfirmUrl" type="String" required="true"/>
    <aura:attribute name="startUrl" type="String" required="false" description="The url you go to after a successful login" />
    <aura:attribute name="showError" type="Boolean" required="true" description="" default="false" access="private"/>
    <aura:attribute name="errorMessage" type="String" required="false" description="" access="private"/>
    <aura:attribute name="firstnameLabel" type="String" required="false" default="First Name"/>
    <aura:attribute name="lastnameLabel" type="String" required="false" default="Last Name"/>
    <aura:attribute name="emailLabel" type="String" required="false" default="Email"/>
    <aura:attribute name="passwordLabel" type="String" required="false" default="Create Password"/>
    <aura:attribute name="confirmPasswordLabel" type="String" required="false" default="Confirm Password"/>    
    <aura:attribute name="submitButtonLabel" type="String" required="false" default="CREATE ACCOUNT"/>
    <aura:attribute name="includePasswordField" type="Boolean" required="false" default="false" description="Whether to include password"/>    
    <aura:attribute name="extraFieldsFieldSet" type="String" required="false" description="A field set name whose fields are desired for user registration"/>
    <aura:attribute name="extraFields" type="list" required="false" description="A field set name whose fields are desired for user registration"/>
    <aura:handler name="init" value="{!this}" action="{!c.initialize}"/>
    <aura:attribute name="expid" type="String" required="false" description="The branding experience ID" />    
    
    <aura:registerevent name="sitePropagatedStartUrl" type="c:setStartUrl"/>
    <aura:handler name="init" value="{!this}" action="{!c.initialize}"/>
    <aura:dependency resource="c:setStartUrl" type="EVENT"/>
   
    <aura:dependency resource="siteforce:registerQueryEventMap" type="EVENT"/>
   
    <aura:handler event="c:setStartUrl" action="{!c.setStartUrl}"/> 
    <aura:handler event="c:setExpId" action="{!c.setExpId}"/>    
    <aura:dependency resource="c:setExpId" type="EVENT"/>

    <aura:attribute name="b2cOrigin" type="Boolean" />
    <aura:attribute name="email" type="String" />
    <aura:attribute name="objResult" type="Object" default="{Email: '', AccountId: '', ContactId: '', FirstName: '', LastName: ''}" />
    <aura:attribute name="firstname" type="String" />
    <aura:attribute name="lastname" type="String" />

    <aura:attribute name="showSpinner" type="Boolean" default="false" />
    <aura:attribute name="hasErrors" type="Boolean" default="false" />
    <aura:attribute name="passwordRules" type="String" default="Password rules: min. 8 characters, must contain letters and numbers."/>

    <div class="container">

        <aura:if isTrue="{!v.showSpinner}">
            <lightning:spinner alternativeText="Loading" size="large" />
        </aura:if>

        <aura:renderIf isTrue="{!v.showError}">
            <div id="error" class="technicalsupport slds-p-vertical_x-large"  >
                <a href="https://www.redcross.org/take-a-class/customers-service"  >{!v.errorMessage}</a>
            </div>

        </aura:renderIf>

        <div id="sfdc_username_container" aura:id="firstname_div" class="sfdc inputfield" >
            <span id="sfdc_user" class="login-icon" data-icon="a"></span>
            <ui:inputText value="{!v.firstname}" aura:id="firstname" placeholder="{!v.firstnameLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc" />
        </div>

        <div id="sfdc_nickname_container" aura:id="lastname_div" class="sfdc inputfield">
            <span id="sfdc_user" class="login-icon" data-icon="a"></span>
            <ui:inputText value="{!v.lastname}" aura:id="lastname" placeholder="{!v.lastnameLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc"/>
        </div>

        <div id="sfdc_email_container" aura:id="email_div" class="sfdc inputfield">
            <span id="sfdc_user" class="login-icon" data-icon="k"></span>
            <ui:inputText value="{!v.email}" aura:id="email" placeholder="{!v.emailLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc"/>
        </div>

        <aura:iteration aura:id="extraFields" items="{!v.extraFields}" var="curField" indexVar="index">
            <div id="sfdc_extrafield_container" class="sfdc">
                <span id="sfdc_user" class="login-icon" data-icon="a"></span>
                <ui:inputText value="{!curField.value}" aura:id="{!curField.fieldPath}" placeholder="{!curField.label}" keyup="{!c.onKeyUp}" class="input sfdc_extrafieldinput sfdc"/>
            </div>
        </aura:iteration>

        <aura:renderIf isTrue="{!v.includePasswordField}">
            <div id="sfdc_password_container" aura:id="password_div" class="sfdc inputfield">
                <span id="sfdc_lock" class="login-icon sfdc" data-icon="c"></span>
                <ui:inputSecret value="" aura:id="password" placeholder="{!v.passwordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc"/>
            </div>
            <div class="slds-p-bottom_small" style="color: grey; font-style: italic; font-size: 12px;" >
                <ui:outputText value="{!v.passwordRules}"  />
            </div>

            <div id="sfdc_confirm_password_container" aura:id="confirmPassword_div" class="sfdc inputfield">
                <span id="sfdc_lock" class="login-icon sfdc" data-icon="c"></span>
                <ui:inputSecret value="" aura:id="confirmPassword" placeholder="{!v.confirmPasswordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc"/>
            </div>
        </aura:renderIf>

        <div class="sfdc">
            <ui:button aura:id="submitButton" label="CREATE ACCOUNT" press="{!c.handleSelfRegister}" class="sfdc_button"/>
        </div>

        <div style="border-top: 1px solid lightgrey; margin-top: 50px; margin-bottom:50px; padding-top: 10px">
            <ui:outputText value="Already have an account?" class="link_label" />

            <span>
                <span class="sfdc link" onclick="{!c.navigateToLoginScreen}">Go to Login</span>
            </span>

        </div>

    </div>


</aura:component>